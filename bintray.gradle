apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

apply from: 'publish.gradle'

bintray {
    user = bintrayUsername
    key = bintrayApiKey
    publications = ['release']
    configurations = ['archives']

    pkg {
        name = bintrayName
        repo = bintrayRepository
        desc = bintrayDescription

        vcsUrl = gitUrl
        githubRepo = gitUrl
        websiteUrl = projectUrl
        issueTrackerUrl = issuesUrl
        licenses = bintrayLicenses
        labels = bintrayLabels

        publish = true
        override = true
        publicDownloadNumbers = true

        version {
            released = new Date()
            vcsTag = version
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId group
            version version
            artifactId project.name

            pom {
                name = bintrayName
                description = bintrayDescription
                url = projectUrl
                packaging 'aar'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerOrganization
                    }
                }

                scm {
                    connection = 'scm:git:' + projectUrl
                    url = projectUrl
                }
            }

            pom.withXml {
                def dependencies = asNode().getAt('dependencies')[0]
                        ?: asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', it.group)
                        dependency.appendNode('artifactId', it.name)
                        dependency.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"

    configuration {
        includeNonPublic = false
        skipEmptyPackages = true
        reportUndocumented = true
    }
}

if (project.hasProperty("kotlin")) {
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}